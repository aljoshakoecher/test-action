# A workflow to check for consistency of changed ontology files
name: Check Ontology Consistency

# Controls when the workflow will run
on:
  # Triggered by PRs to develop
  pull_request:
    types:
      - opened
    paths:
      - '**.owl'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "check-consistency"
  check-consistency:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
          
      # Upload reasoner
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: reasoner
          path: openlletcli
      
      # Get changed files
      - name: Get files and check consistency
        id: checkAllFiles
        run: |
          URL="https://api.github.com/repos/${{ github.repository }}/pulls/4/files"
          FILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')
          for f in $FILES 
          do 
            echo "file $f"
            if [[ $f == *".owl"* ]]; then
              echo "is owl: $f"
              reasoner_result="$(./openlletcli/bin/openllet consistency $f)"
              #reasoner_result="${reasoner_result//$' '/'%20'}"
              echo "$reasoner_result"
              #reasoner_result="${reasoner_result//$'\n'/'%0A'}"
              #reasoner_result="${reasoner_result//$'\r'/'%0D'}"
              result="consistent"
              if [[ $reasoner_result == *"Consistent: No"* ]]; then
                echo "is inconsistent"
                result="inconsistent"
              fi
            else
              echo "no owl $f"
            fi
            echo "::set-output name=result::$result"
          done
            
      # Check reasoner result -> negative feedback if inconsistent
      - name: Check reasoner result
        #if: ${{contains(steps.checkAllFiles.outputs.result, 'Consistent:%20No')}}
        uses: actions/github-script@v3
        env:
          result: ${{steps.checkAllFiles.outputs.result}}
        with:
          script: |
            console.log("result")
            const { result } = process.env
            console.log("result:")
            console.log(result)
            core.setFailed('Your ontology is inconsistent. Please make sure to fix inconsistencies before merging.')
              
      # Positive feedback if consistent
      - name: Give positive feedback
        run: echo "Your Ontology is consistent and may be merged."
